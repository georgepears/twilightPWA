import { Router } from '@angular/router';
import { Observable, OperatorFunction } from 'rxjs';
export declare class Network {
    protected router: Router;
    protected platformId: string;
    protected routeOffline: string;
    protected routeUnavailable: string;
    static instance: Network | null;
    /** Observable to listen when Internet connection availability changes */
    onlineChanges: Observable<boolean>;
    /** Check if Internet connection is available */
    readonly online: boolean;
    /** Do not use this method, use `catchOffline` function directly */
    static catchOffline<T>(): OperatorFunction<T, T>;
    protected static catchCallback<T>(error: any): Observable<T>;
    constructor(router: Router, platformId: string, routeOffline: string, routeUnavailable: string);
}
/**
 * Catch offline errors (no Internet connection) and server errors (HTTP status 5xx)
 * and redirect to /offline or /unavailable page (routes can be changed via offlineProviders())
 */
export declare const catchOffline: typeof Network.catchOffline;
